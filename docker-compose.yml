version: "3.9"

services:
  db:
    image: postgres:15
    container_name: geo_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-geolocate_db}
      POSTGRES_USER: ${POSTGRES_USER:-geolocate_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-StrongPass123!}
    ports:
      - "5432:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-geolocate_user} -d ${POSTGRES_DB:-geolocate_db}"]
      interval: 5s
      timeout: 5s
      retries: 10

  auth-service:
    build: ./services/auth-service
    container_name: auth_service
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-geolocate_db}
      POSTGRES_USER: ${POSTGRES_USER:-geolocate_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-StrongPass123!}
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      PORT: "5000"
    ports:
      - "${AUTH_PORT:-5001}:5000"

  photo-service:
    build: ./services/photo-service
    container_name: photo_service
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-geolocate_db}
      POSTGRES_USER: ${POSTGRES_USER:-geolocate_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-StrongPass123!}
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      UPLOAD_DIR: /uploads
      INSTALL_DIR: /app/install
      MODEL_DIR: /app/model
      PORT: "5000"
      ZIP_MAX_FILES: "500"
      ZIP_MAX_UNCOMPRESSED_MB: "1024"
    volumes:
      - ./uploads:/uploads
      - ./install:/app/install:ro
    ports:
      - "${PHOTO_PORT:-5002}:5000"

  coords-service:
    build: ./services/coords-service
    container_name: coords_service
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-geolocate_db}
      POSTGRES_USER: ${POSTGRES_USER:-geolocate_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-StrongPass123!}
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      PORT: "5000"
    ports:
      - "${COORDS_PORT:-5005}:5000"

  calc-service:
    build: ./services/calc-service
    container_name: calc_service
    restart: always
    environment:
      PORT: "5000"
      BASE_URL: "http://calc-service:5000"  # для корректных URL превью внутри сети Docker
    ports:
      - "${CALC_PORT:-5004}:5000"

  export-service:
    build: ./services/export-service
    container_name: export_service
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-geolocate_db}
      POSTGRES_USER: ${POSTGRES_USER:-geolocate_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-StrongPass123!}
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      PORT: "5000"
      # лучше на гейтвей, чтобы внешние ссылки работали из браузера
      PUBLIC_UPLOAD_BASE: "http://api-gateway:5000/api/photos"
    ports:
      - "${EXPORT_PORT:-5003}:5000"

  api-gateway:
    build: ./services/api-gateway
    container_name: api_gateway
    restart: always
    depends_on:
      - auth-service
      - photo-service
      - coords-service
      - calc-service
      - export-service
    environment:
      AUTH_URL:   "http://auth-service:5000"
      PHOTO_URL:  "http://photo-service:5000"
      COORDS_URL: "http://coords-service:5000"
      CALC_URL:   "http://calc-service:5000"
      EXPORT_URL: "http://export-service:5000"
      PORT: "5000"
    ports:
      - "${GATEWAY_PORT:-5000}:5000"

  frontend:
    image: nginx:alpine
    container_name: frontend
    restart: always
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "${FRONTEND_PORT:-8080}:80"

volumes:
  pgdata:
